name: build, test and publish

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  
  build:
    runs-on: ubuntu-latest
    
    env:
      Sentry:Dsn: ${{ vars.SENTRY_DSN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Install dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release

    - name: Execute unit tests
      run: dotnet test --collect:"Code Coverage;Format=Xml;CoverageFileName=coverage.xml" --results-directory ./coverage
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      packages: write
      
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./src
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy:
    runs-on: ubuntu-latest
    needs: [publish]
    
    steps:
      - name: Deploy to Coolify
        id: api-request
        uses: muhfaris/request-action@v1
        with:
          url: ${{ secrets.COOLIFY_WEBHOOK }}
          headers: ${{ secrets.COOLIFY_TOKEN }}
          method: GET

      - name: Show API Response Status
        run: |
          echo "Response Status: ${{ steps.api-request.outputs.response-status }}"

      - name: Show API Response Data
        run: |
          echo "Response Data: ${{ steps.api-request.outputs.response-data }}"
        
